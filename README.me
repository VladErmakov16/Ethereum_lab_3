Лабораторная работа охватывает важные аспекты взаимодействия с смарт-контрактом на блокчейне Ethereum с использованием библиотеки Web3.py в языке программирования Python. В данном отчете я предоставлю обзор основных шагов и деталей реализации кода.

Шаг 1: Подключение к узлу Ethereum
В начале работы происходит подключение к узлу Ethereum с использованием Infura. Узел Ethereum служит как интерфейс для взаимодействия с блокчейном.

Шаг 2: Определение адреса и приватного ключа
Для подписи и отправки транзакций необходим адрес кошелька (аккаунта) и его соответствующий приватный ключ. В коде (lab3.py) представлен адрес acc1 и приватный ключ private_key.

Шаг 3: Определение адреса смарт-контракта и ABI
Адрес смарт-контракта определяется в contract_address, а ABI (Application Binary Interface) контракта определяется в contract_abi. ABI - это описание методов и событий, которые смарт-контракт может обрабатывать.

Шаг 4: Создание экземпляра смарт-контракта
С использованием Web3.py создается экземпляр смарт-контракта, который позволяет вызывать методы и получать информацию о контракте.

Шаг 5: Подготовка и отправка транзакции для функции setData
Выполняется вызов функции setData с передачей нового значения. Транзакция собирается с помощью build_transaction, подписывается с использованием приватного ключа и отправляется в блокчейн. Полученный хэш транзакции выводится на экран.

Шаг 6: Подготовка и отправка транзакции для функции transferOwnership
То же самое происходит для функции transferOwnership, где новому владельцу передается контроль над смарт-контрактом.

Шаг 7: Получение и подписка на события
С помощью контракта, вы можете получать логи событий, произошедших на контракте. Функция get_contract_events извлекает события DataUpdated, а функция subscribe_to_data_updated_events подписывается на будущие события DataUpdated. Аналогично, выполняется для события OwnershipTransferred.

Выводы
Эта лабораторная работа предоставляет пример взаимодействия с смарт-контрактом на Ethereum с использованием Python и библиотеки Web3.py. Она включает в себя создание и отправку транзакций, получение событий и их подписку, а также управление смарт-контрактом. При работе с реальными контрактами убедитесь, что у вас есть необходимые права доступа и соблюдены все безопасность и прозрачность процесса работы с контрактом.
